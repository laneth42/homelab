---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        setGateway: "true"
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.5.0.7106@sha256:74b2e992e90314250e6882d5aa7491ea7647230478f304e4d0eb13f8ab16fc7d
    env:
      TZ: ${TIMEZONE}
      RADARR__INSTANCE_NAME: Radarr
      RADARR__PORT: &port 80
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
      RADARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:filmstrip
        hosts:
          - host: &host radarr.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 2000
      runAsGroup: 2000
      fsGroup: 2000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v4
      media:
        enabled: true
        type: nfs
        server: ${SECRET_MEDIA_SERVER}
        path: /media
        mountPath: /media
      backup:
        enabled: true
        type: nfs
        server: ${SECRET_BACKUP_SERVER}
        path: ${SECRET_BACKUP_FOLDER}/radarr
        mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
